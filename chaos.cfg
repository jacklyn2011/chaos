[main]
# 激活某个环境
activate = test
open_admin = True
# 作为master启动时,配置为空; 作为jmeter的agent启动时,配置成符合python变量命令规范的任意字符串
agent_tag =
# 触发jmeter分布式阈值，当配置压力超过阈值时将启用分布式压测
enable_distributed_concurrent = 1000


[common-test]
# master部署的域名或ip端口，作为agent启动时需要配置该项
master_host_port = 127.0.0.1:8080
# 小文件系统
domino_url =
# 企业微信通知
wechat_notice_url =


[common-k2_test]
# master部署的域名或ip端口，作为agent启动时需要配置该项
master_host_port =
# 小文件系统
domino_url =
# 企业微信通知
wechat_notice_url =


[common-online]
# master部署的域名或ip端口，作为agent启动时需要配置该项
master_host_port =
# 小文件系统
domino_url =
# 企业微信通知
wechat_notice_url =


[redis-common]
master_broker_db=3
master_backend_db=4
agent_status_cache_db=5
agent_broker_db=6
agent_backend_db=7


[redis-test]    # 测试环境redis
host=
port=6379


[redis-k2_test] # k2测试环境redis
host=
port=6379


[redis-online]  # 线上环境redis
host=
port=6379


[gitlab-common]
base_url = http://host:port/api/v3/
access_token_url = http://host:port/oauth/token
authorize_url = http://host:port/oauth/authorize


[gitlab-test]   # 本机
application_id={{application_id}}
secret={{secret}}


[gitlab-k2_test]    # k2测试环境
application_id={{application_id}}
secret={{secret}}


[gitlab-online]     # 生产环境
application_id={{application_id}}
secret={{secret}}


[mission-sample-test]
sample_host = http://www.baidu.com
sample_path = /
sample_data =


[mission-sample-k2_test]
sample_host = http://www.baidu.com
sample_path = /
sample_data =


[mission-sample-online]
sample_host = http://www.baidu.com
sample_path = /
sample_data =


[mission-sample]
placeholder_data = 请求body数据
 例1: {"username":"abc","password":"abc"}                         // 纯文本
 例2: {"username":"${name}", "password":"${password}"}  // 其中${name}和${password}为上传csv文件首行中的值, 例如此处文件首行应该为：name,password
 提示: 上传数据文件中的变量也可以用在接口路径中

placeholder_header = 请求头, 例: {"content-type":"application/json"}

help_on_env = <div><strong>使用场景:</strong></div>
 <div style="margin-left:10px"><small>保留前一个接口返回值供后续接口使用。</small></div>
 <div><strong>例子:</strong></div>
 <div style="margin-left:10px"><small>若前一个接口body为:{"cellphone":"13291815230"},想要保存手机号</small></div>
 <div><strong>操作步骤:</strong></div>
 <ul><small><li>点击添加变量</li><li>变量名填写: <code>phone</code></li><li>使用<code>正则表达式</code>,取值自</code>响应体</code></li><li>表达式:<code>cellphone":"(\d+)"</code></li><small></ul></small>第一个括号内的正则表达式匹配到的值<code>13291815230</code>便可在后续接口配置中使用,用法:${变量名} 。如上例中为:<code>${phone}</code></small>

help_on_file = <div><strong>使用场景:</strong></div>
 <div style="margin-left:10px"><small>当<code>请求数据需要从本地文件中读取</code>时</small></div>
 <div><strong>用法:</strong></div>
 <div style="margin-left:10px"><small>选择本地数据文件(<code>txt,csv,tsv</code>),文件内格式要求及使用方式见下面文本框提示</small></div>

amusement = 绿蚁新醅酒，红泥小火炉，晚来天欲雪，能饮一杯无。


[monitor-test]
panel_id_list = 10,14,13
url = http://{{grafana_host}}/dashboard-solo/db/kubernetes-ying-yong-jian-kong?refresh=30s&panelId={panel_id}&orgId=1&var-Namespace={namespace}&var-Deployment={instance_name}


[monitor-k2_test]
panel_id_list = 10,14,13
url = http://{{grafana_host}}/dashboard-solo/db/kubernetes-ying-yong-jian-kong?refresh=30s&panelId={panel_id}&orgId=1&var-Namespace={namespace}&var-Deployment={instance_name}


[monitor-online]
panel_id_list = 15,19,32
url = http://{{grafana_host}}/dashboard-solo/db/{wai}kubernetes-namespaces-pods?refresh=30s&amp;orgId=1&amp;var-namespace={namespace}&amp;var-pod={instance_name}&amp;panelId={panel_id}
